#!/bin/bash

# Packages
PACKAGES=(curl gnupg tmux ranger i3)
INSTALL_COMMAND='sudo pacman -S'

# Python
PYTHON2_VERSION=2.7.16
PYTHON3_VERSION=3.7.1
PYTHON2_PACKAGES=(neovim)
PYTHON3_PACKAGES=(neovim powerline)

# Ruby
RUBY_VERSION='2.6.0'
RUBY_PACKAGES=(neovim teamocil)
RVM_KEYS=(409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB)

# Installs given package after checking if exists
#
# params:
#   1 - package name
install_package() {
  local res=$(which $1)
  if [[ $? != 0  ]]; then
    eval "$INSTALL_COMMAND $1"
    if [[ $? != 0 ]]; then
      echo "Error occured during installing $1"
      exit 1
    fi
  fi
}

# Prepares python virtual environment
#
# params
#   1 - python version
#   2..n - additional packages to install
install_python() {
  if [[ $(pyenv versions | grep $1) == "" ]]; then
    pyenv install $1
    if [[ $? != 0 ]]; then
      echo "Cannot install python-$1"
      exit 1
    fi
  fi
  pyenv local $1
  shift
  local packages_array=("$@")
  for package in "${packages_array[@]}"; do
    if [[ $(pip list | grep $package) == "" ]]; then
      pip install $package
      if [[ $? != 0 ]]; then
        echo "Cannot install package $package for python $1"
        exit 1
      fi
    fi
  done
}

# Prepares ruby environment
#
# params
#   1 - ruby version
#   2..n - additional packages to install
intall_ruby() {
  let res=$(which rvm)
  if [[ $? = 0 ]]; then
    local keys=()
    for key in "${RVM_KEYS[@]}"; do
      if [[ $(gpg -k | grep key) = "" ]]; then
        keys+=(key)
      fi
    done
    if [[ ${#keys[@]} != 0 ]]; then
      gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys "${keys[@]}"
    fi
    \curl -sSL https://get.rvm.io | bash
  fi
  if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
    source "$HOME/.rvm/scripts/rvm"
  elif [[ -s "/usr/local/rvm/scripts/rvm" ]] ; then
    source "/usr/local/rvm/scripts/rvm"
  else
    echo "ERROR: An RVM installation was not found"
  fi
  if [[ $(rvm list | grep $1) == "" ]]; then
    rvm install $1
  fi
  rvm use $1
  shift
  local packages_array=("$@")
  for package in "${packages_array[@]}"; do
    if [[ $(gem list | grep $package) == "" ]]; then
      gem install $package
      if [[ $? != 0 ]]; then
        echo "Cannot install gem for ruby $1"
        exit 1
      fi
    fi
  done
}

# install packages
for package_name in "${PACKAGES[@]}"; do
  install_package package_name
done

# install pyevn and pyenv-virtualenv
install_package pyenv
if [[ ! -d $(pyenv root)/plugins/pyenv-virtualenv ]]; then
  git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv
fi
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# install python environments
install_python $PYTHON2_VERSION "${PYTHON2_PACKAGES[@]}"
install_python $PYTHON3_VERSION "${PYTHON3_PACKAGES[@]}"

# install ruby
intall_ruby $RUBY_VERSION "${RUBY_PACKAGES[@]}"
